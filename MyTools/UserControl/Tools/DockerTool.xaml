<Border x:Class="MyTools.UserControl.Tools.DockerTool"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyTools.UserControl.Tools"
             mc:Ignorable="d"
             Margin="5" d:DataContext="{d:DesignInstance Type=local:DockerToolViewModel}"
             xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit">
    <Border.Resources>
        <!-- 自定义 ListBoxItem 的样式 -->
        <Style x:Key="NoHoverClickStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <!-- 简单的 Border 和 ContentPresenter -->
                        <Border Background="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- 禁用选中效果 -->
            <Setter Property="IsSelected" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <!-- 移除所有 Triggers -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Border.Resources>
    <DockPanel DataContext="{Binding}">
        <hc:ElementGroup Layout="Stack" DockPanel.Dock="Top">
            <hc:ElementGroup.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </hc:ElementGroup.ItemsPanel>
            <ComboBox SelectedValue="{Binding AddConfig.Parameter}" SelectedValuePath="Tag" SelectedIndex="0">
                <ComboBoxItem Tag="-v">挂载卷</ComboBoxItem>
                <ComboBoxItem Tag="--name">容器名称</ComboBoxItem>
                <ComboBoxItem Tag="-p">端口映射</ComboBoxItem>
                <ComboBoxItem Tag="-e">设置环境变量</ComboBoxItem>
                <ComboBoxItem Tag="--network">指定容器的网络模式</ComboBoxItem>
                <ComboBoxItem Tag="--restart">容器的重启策略</ComboBoxItem>
                <ComboBoxItem Tag="--rm">容器退出后自动删除</ComboBoxItem>
                <ComboBoxItem Tag="--add-host">添加主机到IP的映射</ComboBoxItem>
                <ComboBoxItem Tag="--dns">设置DNS服务器</ComboBoxItem>
                <ComboBoxItem Tag="--mac-address">设置MAC地址</ComboBoxItem>
                <ComboBoxItem Tag="--network">指定容器连接的网络</ComboBoxItem>
                <ComboBoxItem Tag="--ip">指定容器的IP地址</ComboBoxItem>
                <ComboBoxItem Tag="--env-file">从文件加载环境变量</ComboBoxItem>
            </ComboBox>
            <TextBox Grid.Column="1" Text="{Binding AddConfig.Value}"></TextBox>
            <Button Grid.Column="2" Margin="10,0" Command="{Binding Add}">添加</Button>
        </hc:ElementGroup>
        <DockPanel DockPanel.Dock="Bottom">
            <hc:UniformSpacingPanel DockPanel.Dock="Top" Spacing="10" Orientation="Vertical">
                <TextBox hc:InfoElement.TitleWidth="60" hc:InfoElement.TitlePlacement="Left" hc:InfoElement.Title="镜像名称" VerticalAlignment="Center" Style="{StaticResource TextBoxExtend}" Text="{Binding ImageName}"/>
            </hc:UniformSpacingPanel>
            <hc:UniformSpacingPanel DockPanel.Dock="Top" Spacing="10" ChildWrapping="Wrap" Margin="5">
                <CheckBox Content="后台运行" IsChecked="{Binding Detach}"/>
                <CheckBox Content="打开交互终端" IsChecked="{Binding InteractiveTTy}"/>
                <Button Style="{StaticResource ButtonPrimary}" Command="{Binding AnalysisDockerRunCommand}">解析</Button>
                <Button Style="{StaticResource ButtonPrimary}" Command="{Binding ReBuildDockerRunCommand}">重新生成命令</Button>
            </hc:UniformSpacingPanel>
            <avalonEdit:TextEditor ShowLineNumbers="True" WordWrap="True" Height="120" Document="{Binding Command}"/>
        </DockPanel>
        <ListBox Margin="0,5" Padding="5,0" ItemsSource="{Binding DockerConfigs}" ItemContainerStyle="{StaticResource NoHoverClickStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <hc:ElementGroup Layout="Stack" Margin="0,5,0,0">
                        <hc:ElementGroup.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="160"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </ItemsPanelTemplate>
                        </hc:ElementGroup.ItemsPanel>
                        <!--<TextBox Text="{Binding Parameter}" VerticalAlignment="Center" IsEnabled="False"></TextBox>-->
                        <ComboBox SelectedValue="{Binding Parameter}" SelectedValuePath="Tag" IsEnabled="False" IsEditable="True">
                            <ComboBoxItem Tag="-v">挂载卷</ComboBoxItem>
                            <ComboBoxItem Tag="--hostname">容器主机名</ComboBoxItem>
                            <ComboBoxItem Tag="--name">容器名称</ComboBoxItem>
                            <ComboBoxItem Tag="-p">端口映射</ComboBoxItem>
                            <ComboBoxItem Tag="-e">设置环境变量</ComboBoxItem>
                            <ComboBoxItem Tag="--network">指定容器的网络模式</ComboBoxItem>
                            <ComboBoxItem Tag="--restart">容器的重启策略</ComboBoxItem>
                            <ComboBoxItem Tag="--rm">容器退出后自动删除</ComboBoxItem>
                            <ComboBoxItem Tag="--add-host">添加主机到IP的映射</ComboBoxItem>
                            <ComboBoxItem Tag="--dns">设置DNS服务器</ComboBoxItem>
                            <ComboBoxItem Tag="--mac-address">设置MAC地址</ComboBoxItem>
                            <ComboBoxItem Tag="--network">指定容器连接的网络</ComboBoxItem>
                            <ComboBoxItem Tag="--ip">指定容器的IP地址</ComboBoxItem>
                            <ComboBoxItem Tag="--env-file">从文件加载环境变量</ComboBoxItem>
                            <ComboBoxItem Tag="--user">指定运行容器的用户和组</ComboBoxItem>
                            <ComboBoxItem Tag="--expose">暴露容器端口</ComboBoxItem>
                            <ComboBoxItem Tag="--link">连接另一个容器</ComboBoxItem>
                            <ComboBoxItem Tag="--security-opt">设置安全选项</ComboBoxItem>
                            <ComboBoxItem Tag="--tmpfs">挂载临时文件系统</ComboBoxItem>
                            <ComboBoxItem Tag="--cap-add">添加容器能力</ComboBoxItem>
                            <ComboBoxItem Tag="--cap-drop">移除容器能力</ComboBoxItem>
                            <ComboBoxItem Tag="--ulimit">设置资源限制</ComboBoxItem>
                            <ComboBoxItem Tag="--log-driver">设置日志驱动</ComboBoxItem>
                            <ComboBoxItem Tag="--log-opt">设置日志文件大小</ComboBoxItem>
                            <ComboBoxItem Tag="--health-interval">健康检查间隔时间</ComboBoxItem>
                            <ComboBoxItem Tag="--health-retries">健康检查重试次数</ComboBoxItem>
                            <ComboBoxItem Tag="--health-timeout">健康检查超时时间</ComboBoxItem>
                            <ComboBoxItem Tag="--entrypoint">覆盖容器的默认入口点</ComboBoxItem>
                        </ComboBox>
                        <TextBox Grid.Column="1" Text="{Binding Value}"></TextBox>
                        <Button Grid.Column="2" Margin="10,0" Command="{Binding DataContext.Delete, RelativeSource={RelativeSource AncestorType=DockPanel}}" CommandParameter="{Binding}">删除</Button>
                    </hc:ElementGroup>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</Border>
